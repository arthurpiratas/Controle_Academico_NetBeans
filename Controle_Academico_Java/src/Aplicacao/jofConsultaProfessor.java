/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Aplicacao;

import Basicas.Professor;
import Negocio.Fachada;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Arthur
 */
public class jofConsultaProfessor extends javax.swing.JInternalFrame {

    /**
     * Creates new form jofConsultaProfessor
     */
    
    Fachada fachada;
    private DefaultTableModel dtmProfessor;
    
    public jofConsultaProfessor(Fachada fachada, int tipoTela) {
        initComponents();
        
        this.fachada = fachada; 
        dtmProfessor = (DefaultTableModel) jtprofessor.getModel();
        
        for (Professor professor : fachada.retornaListaProfessor()) {
            Object[] dados = {professor.getId(), professor.getNome(), professor.getCargo(), professor.getDataDeNascimento(), professor.getNomeUsuario()};
            dtmProfessor.addRow(dados);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtprofessor = new javax.swing.JTable();
        jpConsultaProfessor = new javax.swing.JPanel();
        jbExcluirAluno = new javax.swing.JButton();
        jbSair = new javax.swing.JButton();
        jbAtualizar = new javax.swing.JButton();
        jpAlteraProfessor = new javax.swing.JPanel();

        setTitle("Consulta Professor");
        getContentPane().setLayout(null);

        jtprofessor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "Cargo", "Data de Nascimento", "Nome Usuário"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtprofessor);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 170, 620, 210);

        jpConsultaProfessor.setLayout(null);

        jbExcluirAluno.setText("Exclui Professor");
        jbExcluirAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirAlunoActionPerformed(evt);
            }
        });
        jpConsultaProfessor.add(jbExcluirAluno);
        jbExcluirAluno.setBounds(30, 10, 140, 30);

        jbSair.setText("Sair");
        jbSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSairActionPerformed(evt);
            }
        });
        jpConsultaProfessor.add(jbSair);
        jbSair.setBounds(388, 11, 140, 30);

        jbAtualizar.setText("Atualizar");
        jbAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAtualizarActionPerformed(evt);
            }
        });
        jpConsultaProfessor.add(jbAtualizar);
        jbAtualizar.setBounds(210, 10, 140, 30);

        getContentPane().add(jpConsultaProfessor);
        jpConsultaProfessor.setBounds(0, 110, 620, 50);

        javax.swing.GroupLayout jpAlteraProfessorLayout = new javax.swing.GroupLayout(jpAlteraProfessor);
        jpAlteraProfessor.setLayout(jpAlteraProfessorLayout);
        jpAlteraProfessorLayout.setHorizontalGroup(
            jpAlteraProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 620, Short.MAX_VALUE)
        );
        jpAlteraProfessorLayout.setVerticalGroup(
            jpAlteraProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        getContentPane().add(jpAlteraProfessor);
        jpAlteraProfessor.setBounds(0, 0, 620, 100);

        setBounds(0, 0, 636, 411);
    }// </editor-fold>//GEN-END:initComponents

    private void jbExcluirAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirAlunoActionPerformed
        // TODO add your handling code here:

        if(jtprofessor.getSelectedRow() != -1){

            if(fachada.verificaProfessorExiste(Integer.parseInt(jtprofessor.getValueAt(jtprofessor.getSelectedRow(), 0).toString()))){
                
                if(fachada.verificaProfessorPossuiTurma(Integer.parseInt(jtprofessor.getValueAt(jtprofessor.getSelectedRow(), 0).toString()))){
                    JOptionPane.showMessageDialog(rootPane, "Professor não pode ser Excluido, pois está vinculado a uma turma!");
                }else{
                fachada.removeProfessor(Integer.parseInt(jtprofessor.getValueAt(jtprofessor.getSelectedRow(), 0).toString()));
                dtmProfessor.removeRow(jtprofessor.getSelectedRow());
                JOptionPane.showMessageDialog(rootPane, "Professor Excluido com Sucesso!");
                }
            }else{
                JOptionPane.showMessageDialog(rootPane, "Este Professor não existe, favor atualizar a Tabela");
            }
        }else{
            JOptionPane.showMessageDialog(rootPane, "Selecione uma linha");
        }

    }//GEN-LAST:event_jbExcluirAlunoActionPerformed

    private void jbSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSairActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jbSairActionPerformed

    private void jbAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAtualizarActionPerformed
        // TODO add your handling code here:

        limpaTabela();
        for (Professor professor : fachada.retornaListaProfessor()) {
            Object[] dados = {professor.getId(), professor.getNome(), professor.getCargo(), professor.getDataDeNascimento(), professor.getNomeUsuario()};
            dtmProfessor.addRow(dados);
        }

    }//GEN-LAST:event_jbAtualizarActionPerformed

    public void limpaTabela(){
        
        if (dtmProfessor.getRowCount() > 0){
            for (int i=0;i<=dtmProfessor.getRowCount();i++){
                dtmProfessor.removeRow(0);
            }            
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAtualizar;
    private javax.swing.JButton jbExcluirAluno;
    private javax.swing.JButton jbSair;
    private javax.swing.JPanel jpAlteraProfessor;
    private javax.swing.JPanel jpConsultaProfessor;
    private javax.swing.JTable jtprofessor;
    // End of variables declaration//GEN-END:variables
}
