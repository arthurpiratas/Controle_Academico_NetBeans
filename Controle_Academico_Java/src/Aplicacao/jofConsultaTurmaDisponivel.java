/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Aplicacao;

import Basicas.Professor;
import Basicas.Turma;
import Negocio.Fachada;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Arthur
 */
public class jofConsultaTurmaDisponivel extends javax.swing.JInternalFrame {

    /**
     * Creates new form jofConsultaTurmaDisponivel
     */
    
    Fachada fachada; 
    private DefaultTableModel dtmTurmas;
    Professor professor; 
    
    public jofConsultaTurmaDisponivel(Professor professor, int tipoDeTela) {
        initComponents();
        
        this.fachada = Fachada.getInstance();
        this.professor = professor; 
        dtmTurmas = (DefaultTableModel) jtTurmas.getModel();
        
        
        limpaTabela();
        
        if(tipoDeTela == 1){
            for (Turma turma : fachada.retornaListaTurmaSemProfessor()) {
                Object[] dados = {turma.getId(), turma.getNome(), turma.getProfessor() != -1 ? fachada.buscaProfessor(turma.getProfessor()).getNome() : " ", fachada.buscaDisciplina(turma.getDisciplina()).getNome(), turma.getCapacidadeDaTurma(), turma.getQtdAlunoTurma()};
                dtmTurmas.addRow(dados);
            }
            jpSairTurma.setEnabled(false);
            jpSairTurma.setVisible(false);
        }else{
            for (Turma turma : fachada.retornaListaTurmaProfessor(professor)) {
                Object[] dados = {turma.getId(), turma.getNome(), turma.getProfessor() != -1 ? fachada.buscaProfessor(turma.getProfessor()).getNome() : " ", fachada.buscaDisciplina(turma.getDisciplina()).getNome(), turma.getCapacidadeDaTurma(), turma.getQtdAlunoTurma()};
                dtmTurmas.addRow(dados);
            }
            jpEntrarTurma.setEnabled(false);
            jpEntrarTurma.setVisible(false);
        }
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtTurmas = new javax.swing.JTable();
        jpEntrarTurma = new javax.swing.JPanel();
        jbAtualizar = new javax.swing.JButton();
        jbSair = new javax.swing.JButton();
        jbentrar1 = new javax.swing.JButton();
        jbentrar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jpSairTurma = new javax.swing.JPanel();
        jbSair2 = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jbAtualizar2 = new javax.swing.JButton();

        setTitle("Turmas");
        getContentPane().setLayout(null);

        jPanel1.setLayout(null);

        jtTurmas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Professor", "Disciplina", "Capacidade Turma", "Alunos na turma"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtTurmas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtTurmasMouseClicked(evt);
            }
        });
        jtTurmas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtTurmasKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jtTurmas);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(0, 0, 600, 210);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 170, 600, 210);

        jpEntrarTurma.setLayout(null);

        jbAtualizar.setText("Atualizar");
        jbAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAtualizarActionPerformed(evt);
            }
        });
        jpEntrarTurma.add(jbAtualizar);
        jbAtualizar.setBounds(10, 20, 110, 23);

        jbSair.setText("Sair ");
        jbSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSairActionPerformed(evt);
            }
        });
        jpEntrarTurma.add(jbSair);
        jbSair.setBounds(420, 20, 110, 23);

        jbentrar1.setText("Assumir Turma");
        jpEntrarTurma.add(jbentrar1);
        jbentrar1.setBounds(210, 100, 110, 23);

        jbentrar.setText("Assumir Turma");
        jbentrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbentrarActionPerformed(evt);
            }
        });
        jpEntrarTurma.add(jbentrar);
        jbentrar.setBounds(210, 20, 130, 23);

        getContentPane().add(jpEntrarTurma);
        jpEntrarTurma.setBounds(0, 0, 600, 70);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(520, 70, 0, 0);

        jbSair2.setText("Sair ");
        jbSair2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSair2ActionPerformed(evt);
            }
        });

        jbExcluir.setText("Dispensar Turma");
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbAtualizar2.setText("Atualizar");
        jbAtualizar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAtualizar2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpSairTurmaLayout = new javax.swing.GroupLayout(jpSairTurma);
        jpSairTurma.setLayout(jpSairTurmaLayout);
        jpSairTurmaLayout.setHorizontalGroup(
            jpSairTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpSairTurmaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbAtualizar2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91)
                .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                .addComponent(jbSair2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67))
        );
        jpSairTurmaLayout.setVerticalGroup(
            jpSairTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpSairTurmaLayout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(jpSairTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbSair2)
                    .addComponent(jbExcluir)
                    .addComponent(jbAtualizar2))
                .addGap(35, 35, 35))
        );

        getContentPane().add(jpSairTurma);
        jpSairTurma.setBounds(0, 80, 600, 80);

        setBounds(0, 0, 620, 417);
    }// </editor-fold>//GEN-END:initComponents

    private void jbAtualizar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAtualizar2ActionPerformed
        // TODO add your handling code here:
        limpaTabela();
        for (Turma turma : fachada.retornaListaTurmaProfessor(professor)) {
            Object[] dados = {turma.getId(), turma.getNome(), turma.getProfessor() != -1 ? fachada.buscaProfessor(turma.getProfessor()).getNome() : " ", fachada.buscaDisciplina(turma.getDisciplina()).getNome(), turma.getCapacidadeDaTurma(), turma.getQtdAlunoTurma()};
            dtmTurmas.addRow(dados);
        }        
    }//GEN-LAST:event_jbAtualizar2ActionPerformed

    private void jtTurmasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtTurmasMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jtTurmasMouseClicked

    private void jtTurmasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtTurmasKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jtTurmasKeyReleased

    private void jbSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSairActionPerformed
        // TODO add your handling code here:
        
        this.dispose();
        
    }//GEN-LAST:event_jbSairActionPerformed

    private void jbSair2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSair2ActionPerformed
        // TODO add your handling code here:
        
        this.dispose();
        
    }//GEN-LAST:event_jbSair2ActionPerformed

    private void jbAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAtualizarActionPerformed
        // TODO add your handling code here:
        limpaTabela();
        for (Turma turma : fachada.retornaListaTurmaSemProfessor()) {
            Object[] dados = {turma.getId(), turma.getNome(), turma.getProfessor() != -1 ? fachada.buscaProfessor(turma.getProfessor()).getNome() : " ", fachada.buscaDisciplina(turma.getDisciplina()).getNome(), turma.getCapacidadeDaTurma(), turma.getQtdAlunoTurma()};
            dtmTurmas.addRow(dados);
        }
    }//GEN-LAST:event_jbAtualizarActionPerformed

    private void jbentrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbentrarActionPerformed
        // TODO add your handling code here:
        if(jtTurmas.getSelectedRow() != -1){
            Turma turmaAUX = fachada.buscaTurma(Integer.parseInt(jtTurmas.getValueAt(jtTurmas.getSelectedRow(), 0).toString()));
            turmaAUX.setProfessor(professor.getId());
            fachada.alteraTurma(turmaAUX);
            dtmTurmas.removeRow(jtTurmas.getSelectedRow());
            JOptionPane.showMessageDialog(rootPane, "Turma Assumida!");
        }else{
            JOptionPane.showMessageDialog(rootPane, "Selecione uma linha!");
        }
    }//GEN-LAST:event_jbentrarActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        // TODO add your handling code here:
        
        if(jtTurmas.getSelectedRow() != -1){
            Turma turmaAUX = fachada.buscaTurma(Integer.parseInt(jtTurmas.getValueAt(jtTurmas.getSelectedRow(), 0).toString()));
            turmaAUX.setProfessor(-1);
            fachada.alteraTurma(turmaAUX);
            dtmTurmas.removeRow(jtTurmas.getSelectedRow());
            JOptionPane.showMessageDialog(rootPane, "Turma Dispensada!");
        }else{
            JOptionPane.showMessageDialog(rootPane, "Selecione uma linha!");
        }
    }//GEN-LAST:event_jbExcluirActionPerformed
    
    private void limpaTabela(){
        
        if (dtmTurmas.getRowCount() >= 0){
            for (int i=dtmTurmas.getRowCount();i > 0;i--){
                dtmTurmas.removeRow(0);
            }            
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAtualizar;
    private javax.swing.JButton jbAtualizar2;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbSair;
    private javax.swing.JButton jbSair2;
    private javax.swing.JButton jbentrar;
    private javax.swing.JButton jbentrar1;
    private javax.swing.JPanel jpEntrarTurma;
    private javax.swing.JPanel jpSairTurma;
    private javax.swing.JTable jtTurmas;
    // End of variables declaration//GEN-END:variables
}
